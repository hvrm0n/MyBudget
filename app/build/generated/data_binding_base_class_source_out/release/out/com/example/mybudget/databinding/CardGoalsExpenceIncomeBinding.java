// Generated by view binder compiler. Do not edit!
package com.example.mybudget.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mybudget.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardGoalsExpenceIncomeBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView currencyBudgetGoals;

  @NonNull
  public final TextView currencyGoals;

  @NonNull
  public final TextView equalGoals;

  @NonNull
  public final EditText goalsBudgetValue;

  @NonNull
  public final EditText goalsNewValue;

  @NonNull
  public final Spinner spinnerBudgetGoals;

  private CardGoalsExpenceIncomeBinding(@NonNull CardView rootView,
      @NonNull TextView currencyBudgetGoals, @NonNull TextView currencyGoals,
      @NonNull TextView equalGoals, @NonNull EditText goalsBudgetValue,
      @NonNull EditText goalsNewValue, @NonNull Spinner spinnerBudgetGoals) {
    this.rootView = rootView;
    this.currencyBudgetGoals = currencyBudgetGoals;
    this.currencyGoals = currencyGoals;
    this.equalGoals = equalGoals;
    this.goalsBudgetValue = goalsBudgetValue;
    this.goalsNewValue = goalsNewValue;
    this.spinnerBudgetGoals = spinnerBudgetGoals;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardGoalsExpenceIncomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardGoalsExpenceIncomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_goals_expence_income, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardGoalsExpenceIncomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.currencyBudgetGoals;
      TextView currencyBudgetGoals = ViewBindings.findChildViewById(rootView, id);
      if (currencyBudgetGoals == null) {
        break missingId;
      }

      id = R.id.currencyGoals;
      TextView currencyGoals = ViewBindings.findChildViewById(rootView, id);
      if (currencyGoals == null) {
        break missingId;
      }

      id = R.id.equalGoals;
      TextView equalGoals = ViewBindings.findChildViewById(rootView, id);
      if (equalGoals == null) {
        break missingId;
      }

      id = R.id.goalsBudgetValue;
      EditText goalsBudgetValue = ViewBindings.findChildViewById(rootView, id);
      if (goalsBudgetValue == null) {
        break missingId;
      }

      id = R.id.goalsNewValue;
      EditText goalsNewValue = ViewBindings.findChildViewById(rootView, id);
      if (goalsNewValue == null) {
        break missingId;
      }

      id = R.id.spinnerBudgetGoals;
      Spinner spinnerBudgetGoals = ViewBindings.findChildViewById(rootView, id);
      if (spinnerBudgetGoals == null) {
        break missingId;
      }

      return new CardGoalsExpenceIncomeBinding((CardView) rootView, currencyBudgetGoals,
          currencyGoals, equalGoals, goalsBudgetValue, goalsNewValue, spinnerBudgetGoals);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
