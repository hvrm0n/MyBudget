// Generated by view binder compiler. Do not edit!
package com.example.mybudget.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mybudget.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardDefaultCategoryBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final RecyclerView chooseCategory;

  @NonNull
  public final MaterialButton chooseNewCategory;

  @NonNull
  public final Spinner spinnerPrority;

  private CardDefaultCategoryBinding(@NonNull CoordinatorLayout rootView,
      @NonNull RecyclerView chooseCategory, @NonNull MaterialButton chooseNewCategory,
      @NonNull Spinner spinnerPrority) {
    this.rootView = rootView;
    this.chooseCategory = chooseCategory;
    this.chooseNewCategory = chooseNewCategory;
    this.spinnerPrority = spinnerPrority;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CardDefaultCategoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardDefaultCategoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_default_category, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardDefaultCategoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chooseCategory;
      RecyclerView chooseCategory = ViewBindings.findChildViewById(rootView, id);
      if (chooseCategory == null) {
        break missingId;
      }

      id = R.id.chooseNewCategory;
      MaterialButton chooseNewCategory = ViewBindings.findChildViewById(rootView, id);
      if (chooseNewCategory == null) {
        break missingId;
      }

      id = R.id.spinnerPrority;
      Spinner spinnerPrority = ViewBindings.findChildViewById(rootView, id);
      if (spinnerPrority == null) {
        break missingId;
      }

      return new CardDefaultCategoryBinding((CoordinatorLayout) rootView, chooseCategory,
          chooseNewCategory, spinnerPrority);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
