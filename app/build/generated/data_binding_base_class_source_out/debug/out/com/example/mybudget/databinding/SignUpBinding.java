// Generated by view binder compiler. Do not edit!
package com.example.mybudget.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mybudget.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SignUpBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton buttonSignUp;

  @NonNull
  public final EditText emailEdittextSignup;

  @NonNull
  public final TextView emailSignup;

  @NonNull
  public final TextView hintEmailSignUp;

  @NonNull
  public final TextView hintPasswordSignUp;

  @NonNull
  public final EditText passwordEdittextSignup;

  @NonNull
  public final TextView passwordSignup;

  private SignUpBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton buttonSignUp,
      @NonNull EditText emailEdittextSignup, @NonNull TextView emailSignup,
      @NonNull TextView hintEmailSignUp, @NonNull TextView hintPasswordSignUp,
      @NonNull EditText passwordEdittextSignup, @NonNull TextView passwordSignup) {
    this.rootView = rootView;
    this.buttonSignUp = buttonSignUp;
    this.emailEdittextSignup = emailEdittextSignup;
    this.emailSignup = emailSignup;
    this.hintEmailSignUp = hintEmailSignUp;
    this.hintPasswordSignUp = hintPasswordSignUp;
    this.passwordEdittextSignup = passwordEdittextSignup;
    this.passwordSignup = passwordSignup;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SignUpBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSignUp;
      MaterialButton buttonSignUp = ViewBindings.findChildViewById(rootView, id);
      if (buttonSignUp == null) {
        break missingId;
      }

      id = R.id.email_edittext_signup;
      EditText emailEdittextSignup = ViewBindings.findChildViewById(rootView, id);
      if (emailEdittextSignup == null) {
        break missingId;
      }

      id = R.id.email_signup;
      TextView emailSignup = ViewBindings.findChildViewById(rootView, id);
      if (emailSignup == null) {
        break missingId;
      }

      id = R.id.hintEmailSignUp;
      TextView hintEmailSignUp = ViewBindings.findChildViewById(rootView, id);
      if (hintEmailSignUp == null) {
        break missingId;
      }

      id = R.id.hintPasswordSignUp;
      TextView hintPasswordSignUp = ViewBindings.findChildViewById(rootView, id);
      if (hintPasswordSignUp == null) {
        break missingId;
      }

      id = R.id.password_edittext_signup;
      EditText passwordEdittextSignup = ViewBindings.findChildViewById(rootView, id);
      if (passwordEdittextSignup == null) {
        break missingId;
      }

      id = R.id.password_signup;
      TextView passwordSignup = ViewBindings.findChildViewById(rootView, id);
      if (passwordSignup == null) {
        break missingId;
      }

      return new SignUpBinding((LinearLayout) rootView, buttonSignUp, emailEdittextSignup,
          emailSignup, hintEmailSignUp, hintPasswordSignUp, passwordEdittextSignup, passwordSignup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
