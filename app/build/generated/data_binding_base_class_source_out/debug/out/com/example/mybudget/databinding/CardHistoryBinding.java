// Generated by view binder compiler. Do not edit!
package com.example.mybudget.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mybudget.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardHistoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout cardHistory;

  @NonNull
  public final TextView dateOfTransaction;

  @NonNull
  public final ImageView historyImage;

  @NonNull
  public final TextView historyNameBudget;

  @NonNull
  public final TextView historyNameBudget2;

  @NonNull
  public final TextView historyNameCategory;

  @NonNull
  public final TextView incomeTextView;

  @NonNull
  public final TextView valueOfTransaction;

  private CardHistoryBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout cardHistory,
      @NonNull TextView dateOfTransaction, @NonNull ImageView historyImage,
      @NonNull TextView historyNameBudget, @NonNull TextView historyNameBudget2,
      @NonNull TextView historyNameCategory, @NonNull TextView incomeTextView,
      @NonNull TextView valueOfTransaction) {
    this.rootView = rootView;
    this.cardHistory = cardHistory;
    this.dateOfTransaction = dateOfTransaction;
    this.historyImage = historyImage;
    this.historyNameBudget = historyNameBudget;
    this.historyNameBudget2 = historyNameBudget2;
    this.historyNameCategory = historyNameCategory;
    this.incomeTextView = incomeTextView;
    this.valueOfTransaction = valueOfTransaction;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CardHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout cardHistory = (LinearLayout) rootView;

      id = R.id.dateOfTransaction;
      TextView dateOfTransaction = ViewBindings.findChildViewById(rootView, id);
      if (dateOfTransaction == null) {
        break missingId;
      }

      id = R.id.historyImage;
      ImageView historyImage = ViewBindings.findChildViewById(rootView, id);
      if (historyImage == null) {
        break missingId;
      }

      id = R.id.historyNameBudget;
      TextView historyNameBudget = ViewBindings.findChildViewById(rootView, id);
      if (historyNameBudget == null) {
        break missingId;
      }

      id = R.id.historyNameBudget2;
      TextView historyNameBudget2 = ViewBindings.findChildViewById(rootView, id);
      if (historyNameBudget2 == null) {
        break missingId;
      }

      id = R.id.historyNameCategory;
      TextView historyNameCategory = ViewBindings.findChildViewById(rootView, id);
      if (historyNameCategory == null) {
        break missingId;
      }

      id = R.id.incomeTextView;
      TextView incomeTextView = ViewBindings.findChildViewById(rootView, id);
      if (incomeTextView == null) {
        break missingId;
      }

      id = R.id.valueOfTransaction;
      TextView valueOfTransaction = ViewBindings.findChildViewById(rootView, id);
      if (valueOfTransaction == null) {
        break missingId;
      }

      return new CardHistoryBinding((LinearLayout) rootView, cardHistory, dateOfTransaction,
          historyImage, historyNameBudget, historyNameBudget2, historyNameCategory, incomeTextView,
          valueOfTransaction);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
