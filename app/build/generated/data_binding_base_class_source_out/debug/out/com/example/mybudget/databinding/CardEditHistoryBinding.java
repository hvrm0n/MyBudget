// Generated by view binder compiler. Do not edit!
package com.example.mybudget.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CalendarView;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mybudget.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardEditHistoryBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CalendarView datePickerEdit;

  @NonNull
  public final EditText editValueHistory;

  @NonNull
  public final Spinner periodOfNotificationHistory;

  @NonNull
  public final TextView periodOfNotificationTitleHistory;

  @NonNull
  public final TextView timeOfNotificationsHistory;

  @NonNull
  public final TextView timeOfNotificationsTitleHistory;

  private CardEditHistoryBinding(@NonNull CardView rootView, @NonNull CalendarView datePickerEdit,
      @NonNull EditText editValueHistory, @NonNull Spinner periodOfNotificationHistory,
      @NonNull TextView periodOfNotificationTitleHistory,
      @NonNull TextView timeOfNotificationsHistory,
      @NonNull TextView timeOfNotificationsTitleHistory) {
    this.rootView = rootView;
    this.datePickerEdit = datePickerEdit;
    this.editValueHistory = editValueHistory;
    this.periodOfNotificationHistory = periodOfNotificationHistory;
    this.periodOfNotificationTitleHistory = periodOfNotificationTitleHistory;
    this.timeOfNotificationsHistory = timeOfNotificationsHistory;
    this.timeOfNotificationsTitleHistory = timeOfNotificationsTitleHistory;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardEditHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardEditHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_edit_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardEditHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.datePickerEdit;
      CalendarView datePickerEdit = ViewBindings.findChildViewById(rootView, id);
      if (datePickerEdit == null) {
        break missingId;
      }

      id = R.id.editValueHistory;
      EditText editValueHistory = ViewBindings.findChildViewById(rootView, id);
      if (editValueHistory == null) {
        break missingId;
      }

      id = R.id.periodOfNotificationHistory;
      Spinner periodOfNotificationHistory = ViewBindings.findChildViewById(rootView, id);
      if (periodOfNotificationHistory == null) {
        break missingId;
      }

      id = R.id.periodOfNotificationTitleHistory;
      TextView periodOfNotificationTitleHistory = ViewBindings.findChildViewById(rootView, id);
      if (periodOfNotificationTitleHistory == null) {
        break missingId;
      }

      id = R.id.timeOfNotificationsHistory;
      TextView timeOfNotificationsHistory = ViewBindings.findChildViewById(rootView, id);
      if (timeOfNotificationsHistory == null) {
        break missingId;
      }

      id = R.id.timeOfNotificationsTitleHistory;
      TextView timeOfNotificationsTitleHistory = ViewBindings.findChildViewById(rootView, id);
      if (timeOfNotificationsTitleHistory == null) {
        break missingId;
      }

      return new CardEditHistoryBinding((CardView) rootView, datePickerEdit, editValueHistory,
          periodOfNotificationHistory, periodOfNotificationTitleHistory, timeOfNotificationsHistory,
          timeOfNotificationsTitleHistory);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
