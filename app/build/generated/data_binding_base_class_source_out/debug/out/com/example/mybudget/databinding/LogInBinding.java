// Generated by view binder compiler. Do not edit!
package com.example.mybudget.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mybudget.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LogInBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton buttonLogIn;

  @NonNull
  public final EditText emailEdittextLogin;

  @NonNull
  public final TextView emailLogin;

  @NonNull
  public final TextView hintEmailLogIn;

  @NonNull
  public final TextView hintPasswordLogIn;

  @NonNull
  public final EditText passwordEdittextLogin;

  @NonNull
  public final TextView passwordLogin;

  private LogInBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton buttonLogIn,
      @NonNull EditText emailEdittextLogin, @NonNull TextView emailLogin,
      @NonNull TextView hintEmailLogIn, @NonNull TextView hintPasswordLogIn,
      @NonNull EditText passwordEdittextLogin, @NonNull TextView passwordLogin) {
    this.rootView = rootView;
    this.buttonLogIn = buttonLogIn;
    this.emailEdittextLogin = emailEdittextLogin;
    this.emailLogin = emailLogin;
    this.hintEmailLogIn = hintEmailLogIn;
    this.hintPasswordLogIn = hintPasswordLogIn;
    this.passwordEdittextLogin = passwordEdittextLogin;
    this.passwordLogin = passwordLogin;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LogInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LogInBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.log_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LogInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonLogIn;
      MaterialButton buttonLogIn = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogIn == null) {
        break missingId;
      }

      id = R.id.email_edittext_login;
      EditText emailEdittextLogin = ViewBindings.findChildViewById(rootView, id);
      if (emailEdittextLogin == null) {
        break missingId;
      }

      id = R.id.email_login;
      TextView emailLogin = ViewBindings.findChildViewById(rootView, id);
      if (emailLogin == null) {
        break missingId;
      }

      id = R.id.hintEmailLogIn;
      TextView hintEmailLogIn = ViewBindings.findChildViewById(rootView, id);
      if (hintEmailLogIn == null) {
        break missingId;
      }

      id = R.id.hintPasswordLogIn;
      TextView hintPasswordLogIn = ViewBindings.findChildViewById(rootView, id);
      if (hintPasswordLogIn == null) {
        break missingId;
      }

      id = R.id.password_edittext_login;
      EditText passwordEdittextLogin = ViewBindings.findChildViewById(rootView, id);
      if (passwordEdittextLogin == null) {
        break missingId;
      }

      id = R.id.password_login;
      TextView passwordLogin = ViewBindings.findChildViewById(rootView, id);
      if (passwordLogin == null) {
        break missingId;
      }

      return new LogInBinding((LinearLayout) rootView, buttonLogIn, emailEdittextLogin, emailLogin,
          hintEmailLogIn, hintPasswordLogIn, passwordEdittextLogin, passwordLogin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
