// Generated by view binder compiler. Do not edit!
package com.example.mybudget.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mybudget.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PageHistoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView dateRangeHistory;

  @NonNull
  public final RecyclerView historyList;

  @NonNull
  public final LinearLayout layoutFinance;

  @NonNull
  public final LinearLayout linearLayoutHistory;

  @NonNull
  public final ImageView noTransactionImage;

  @NonNull
  public final TextView noTransactionText;

  @NonNull
  public final Spinner spinnerTypeOfHistory;

  @NonNull
  public final TabLayout tabs;

  private PageHistoryBinding(@NonNull LinearLayout rootView, @NonNull TextView dateRangeHistory,
      @NonNull RecyclerView historyList, @NonNull LinearLayout layoutFinance,
      @NonNull LinearLayout linearLayoutHistory, @NonNull ImageView noTransactionImage,
      @NonNull TextView noTransactionText, @NonNull Spinner spinnerTypeOfHistory,
      @NonNull TabLayout tabs) {
    this.rootView = rootView;
    this.dateRangeHistory = dateRangeHistory;
    this.historyList = historyList;
    this.layoutFinance = layoutFinance;
    this.linearLayoutHistory = linearLayoutHistory;
    this.noTransactionImage = noTransactionImage;
    this.noTransactionText = noTransactionText;
    this.spinnerTypeOfHistory = spinnerTypeOfHistory;
    this.tabs = tabs;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PageHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PageHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.page_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PageHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateRangeHistory;
      TextView dateRangeHistory = ViewBindings.findChildViewById(rootView, id);
      if (dateRangeHistory == null) {
        break missingId;
      }

      id = R.id.historyList;
      RecyclerView historyList = ViewBindings.findChildViewById(rootView, id);
      if (historyList == null) {
        break missingId;
      }

      LinearLayout layoutFinance = (LinearLayout) rootView;

      id = R.id.linearLayoutHistory;
      LinearLayout linearLayoutHistory = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutHistory == null) {
        break missingId;
      }

      id = R.id.noTransactionImage;
      ImageView noTransactionImage = ViewBindings.findChildViewById(rootView, id);
      if (noTransactionImage == null) {
        break missingId;
      }

      id = R.id.noTransactionText;
      TextView noTransactionText = ViewBindings.findChildViewById(rootView, id);
      if (noTransactionText == null) {
        break missingId;
      }

      id = R.id.spinnerTypeOfHistory;
      Spinner spinnerTypeOfHistory = ViewBindings.findChildViewById(rootView, id);
      if (spinnerTypeOfHistory == null) {
        break missingId;
      }

      id = R.id.tabs;
      TabLayout tabs = ViewBindings.findChildViewById(rootView, id);
      if (tabs == null) {
        break missingId;
      }

      return new PageHistoryBinding((LinearLayout) rootView, dateRangeHistory, historyList,
          layoutFinance, linearLayoutHistory, noTransactionImage, noTransactionText,
          spinnerTypeOfHistory, tabs);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
